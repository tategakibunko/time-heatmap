"""
[url] https://tb.antiscroll.com
[author] https://github.com/tategakibunko
[license] MIT
"""
time_word_nouns = [
  "1月",
  "１月",
  "一月",
  "2月",
  "２月",
  "二月",
  "3月",
  "３月",
  "三月",
  "4月",
  "４月",
  "四月",
  "5月",
  "５月",
  "五月",
  "6月",
  "６月",
  "六月",
  "7月",
  "７月",
  "七月",
  "8月",
  "８月",
  "八月",
  "9月",
  "９月",
  "九月",
  "10月",
  "１０月",
  "十月",
  "11月",
  "１１月",
  "十一月",
  "12月",
  "１２月",
  "十二月",
  "睦月",
  "如月",
  "弥生",
  "卯月",
  "皐月",
  "水無月",
  "文月",
  "葉月",
  "長月",
  "神無月",
  "霜月",
  "師走",
  "平日",
  "休日",
  "日曜",
  "日曜日",
  "月曜",
  "月曜日",
  "火曜",
  "火曜日",
  "水曜",
  "水曜日",
  "木曜",
  "木曜日",
  "金曜",
  "金曜日",
  "土曜",
  "土曜日",
  "春",
  "桜",
  "入学式",
  "夏",
  "夏休み",
  "海水浴",
  "プール",
  "水着",
  "秋",
  "紅葉",
  "冬",
  "冬休み",
  "春休み",
  "卒業式",
  "サンタクロース",
  "クリスマス",
  "ハロウィン",
  "スキー",
  "スケート",
  "雪",
  "雪合戦",
  "雪だるま",
  "初雪",
  "霜",
  "ストーブ",
  "お正月",
  "正月",
  "おせち",
  "お節",
  "朝",
  "朝食",
  "モーニング",
  "早朝",
  "午前",
  "昼",
  "正午",
  "お昼",
  "昼食",
  "昼休み",
  "午後",
  "ランチ",
  "放課後",
  "夕",
  "夕方",
  "夕刻",
  "夕食",
  "ディナー",
  "夜",
  "夜食",
  "晩",
  "深夜",
  "三春",
  "初春",
  "仲春",
  "晩春",
  "三夏",
  "初夏",
  "仲夏",
  "晩夏",
  "三秋",
  "初秋",
  "仲秋",
  "晩秋",
  "初冬",
  "仲冬",
  "晩冬",
  "新年",
  "春暁",
  "遅日",
  "長閑",
  "淡雪",
  "春光",
  "春雨",
  "春日",
  "春園",
  "春潮",
  "春泥",
  "春田",
  "春愁",
  "春闘",
  "春眠",
  "常節",
  "南風",
  "夕立",
  "赤潮",
  "甘酒",
  "団扇",
  "打水",
  "蚊帳",
  "氷水",
  "常夏",
  "初夏",
  "立夏",
  "小満",
  "初夏",
  "薄暑",
  "仲夏",
  "夏至",
  "仲夏",
  "白夜",
  "梅雨",
  "晩夏",
  "小暑",
  "立秋",
  "炎暑",
  "小暑",
  "溽暑",
  "盛夏",
  "大暑",
  "土用",
  "冷夏",
  "梅雨",
  "夕凪",
  "プール",
  "七夕",
  "小雪",
  "立冬",
  "初冬",
  "初雪",
  "初氷",
  "節季",
  "節分",
  "大寒",
  "晩冬",
  "吹雪",
  "霧氷",
]

time_word_cmbs = [
  ["一", "時"],
  ["二", "時"],
  ["三", "時"],
  ["四", "時"],
  ["五", "時"],
  ["六", "時"],
  ["七", "時"],
  ["八", "時"],
  ["九", "時"],
  ["十", "時"],
  ["十", "一", "時"],
  ["十", "二", "時"],
  ["目覚まし", "時計"],
  ["空", "暗い"],
]

def is_time_words_cmb(words, cmb):
  for cmb_word in cmb:
    if not cmb_word in words:
      return 0
  return 1

def is_time_words(words):
  for word in words:
    if word in time_word_nouns:
      return 1
  for cmb in time_word_cmbs:
    if is_time_words_cmb(words, cmb):
      return 1
  return 0
